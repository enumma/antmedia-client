=begin
#Ant Media Server REST API Reference

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.5.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.31

=end

require 'spec_helper'
require 'json'

# Unit tests for AntmediaClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = AntmediaClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(AntmediaClient::DefaultApi)
    end
  end

  # unit tests for add_initial_user
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'add_initial_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_user
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'add_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authenticate_user
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'authenticate_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_log_settings
  # @param level 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'change_log_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_server_settings
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'change_server_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_settings
  # @param appname 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'change_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_user_password
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'change_user_password test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_application
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_name 
  # @return [Result]
  describe 'create_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_application
  # @param app_name 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :delete_db 
  # @return [Result]
  describe 'delete_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_node
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'delete_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_node_0
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'delete_node_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # @param username 
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_vo_d_stream
  # @param appname 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :stream_name 
  # @return [String]
  describe 'delete_vo_d_stream test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_user
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'edit_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_app_live_streams
  # @param appname 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_app_live_streams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_application_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_application_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_applications
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_applications test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cpu_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_cpu_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file_system_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_file_system_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_gpu_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_gpu_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_heap_dump
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_heap_dump test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_jvm_memory_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_jvm_memory_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_licence_status
  # @param [Hash] opts the optional parameters
  # @return [Licence]
  describe 'get_licence_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_licence_status_0
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key 
  # @return [Licence]
  describe 'get_licence_status_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_live_clients_size
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_live_clients_size test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_log_file
  # @param char_size 
  # @param offset_size 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :log_type 
  # @return [String]
  describe 'get_log_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_count
  # @param [Hash] opts the optional parameters
  # @return [SimpleStat]
  describe 'get_node_count test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_count_0
  # @param [Hash] opts the optional parameters
  # @return [SimpleStat]
  describe 'get_node_count_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_list
  # @param offset 
  # @param size 
  # @param [Hash] opts the optional parameters
  # @return [Array<ClusterNode>]
  describe 'get_node_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node_list_0
  # @param offset 
  # @param size 
  # @param [Hash] opts the optional parameters
  # @return [Array<ClusterNode>]
  describe 'get_node_list_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_server_settings
  # @param [Hash] opts the optional parameters
  # @return [ServerSettings]
  describe 'get_server_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_server_time
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_server_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_settings
  # @param appname 
  # @param [Hash] opts the optional parameters
  # @return [AppSettings]
  describe 'get_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shutdown_status
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_names 
  # @return [BOOLEAN]
  describe 'get_shutdown_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_system_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_memory_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_system_memory_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_resources_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_system_resources_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_thread_dump
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_thread_dump test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_thread_dump_json
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_thread_dump_json test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_threads_info
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_threads_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_list
  # @param [Hash] opts the optional parameters
  # @return [Array<User>]
  describe 'get_user_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_version
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_version test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_admin
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'is_admin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_authenticated_rest
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'is_authenticated_rest test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_enterprise_edition
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'is_enterprise_edition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_first_login
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'is_first_login test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_in_cluster_mode
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'is_in_cluster_mode test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for is_shutdown_properly
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_names 
  # @return [nil]
  describe 'is_shutdown_properly test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reset_broadcast
  # @param appname 
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'reset_broadcast test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_support_request
  # @param [Hash] opts the optional parameters
  # @return [Result]
  describe 'send_support_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_shutdown_status
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_names 
  # @return [BOOLEAN]
  describe 'set_shutdown_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
